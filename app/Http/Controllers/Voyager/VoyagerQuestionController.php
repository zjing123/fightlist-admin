<?php

namespace App\Http\Controllers\Voyager;

use App\Models\TranslationLanguage;
use Illuminate\Http\Request;
use App\Http\Controllers\Controller;
use TCG\Voyager\Facades\Voyager;
use Rny\ZhConverter\ZhConverter;

class VoyagerQuestionController extends VoyagerBreadController
{
    protected $fillLanguage = ['zh_TW', 'zh_HK'];

    public function index(Request $request)
    {
        return parent::index($request); // TODO: Change the autogenerated stub
    }

    public function create(Request $request)
    {
        $slug = $this->getSlug($request);

        $dataType = Voyager::model('DataType')->where('slug', '=', $slug)->first();

        // Check permission
        $this->authorize('add', app($dataType->model_name));

        $languages = TranslationLanguage::all();

        // Check if BREAD is Translatable
        $isModelTranslatable = true;

        $columns = [];
        foreach ($languages as $language) {
            if (in_array($language->locale, $this->fillLanguage)) {
                continue;
            }

            $column = [
                'title' => $language->title,
                'name' => [
                    'question'=> 'question_' . $language->locale,
                    'answer' => 'answer_' . $language->locale
                ],
                'question' => '',
                'answers' => '',
                'lang' => $language->locale
            ];

            $columns[] = $column;
        }
        $columns = json_encode($columns);

        $view = 'voyager::bread.edit-add';

        if (view()->exists("voyager::$slug.edit-add")) {
            $view = "voyager::$slug.edit-add";
        }

        return Voyager::view($view, compact('dataType', 'languages', 'isModelTranslatable', 'columns'));
    }

    public function store(Request $request)
    {
        $columns = json_decode($request->columns);
        $questions = [];
        $question_cn = [];
        foreach ($columns as $column) {
            $question = [
                'title' => $column->question,
                'answers' => $column->answers,
                'lang' => $column->lang
            ];
            $questions[] = $question;
            if ($column->lang == 'zh_CN') {
                $question_cn = $question;
            }
        }

        if (!empty($question_cn)) {
            $questions[] = [
                'title' => ZhConverter::zh2TW($question_cn['title']),
                'answers' => ZhConverter::zh2TW($question_cn['answers']),
                'lang' => 'zh_TW'
            ];
            $questions[] = [
                'title' => ZhConverter::zh2HK($question_cn['title']),
                'answers' => ZhConverter::zh2HK($question_cn['answers']),
                'lang' => 'zh_HK'
            ];
        }

        print_r($questions);
    }

    protected function handleAnswers($answers)
    {

    }
}
